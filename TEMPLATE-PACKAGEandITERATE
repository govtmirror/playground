for i in *.fastq*; do n=`echo $i | sed 's/_.*//' | sed 's/\..*//'`; echo "n is : $n"; mkdir -p $n; mv $i $n/; done

currentdir=`pwd`; for f in *; do cd $currentdir; echo $f; cd ./$f; `PROGRAM_CALL` & done; wait; echo "DONE $PWD" > tempfile; cat tempfile | mutt -s "DONE" -- tod.p.stuber@aphis.usda.gov; rm tempfile

#paired
krakenDatabase="/home/shared/databases/kraken/std/"; sampleName=`ls *fastq* | head -1 | sed 's/_.*//' | sed 's/\..*//'`; kraken --db ${krakenDatabase} --threads 20 --paired *fastq* > $sampleName-output.txt && kraken-report --db ${krakenDatabase} $sampleName-output.txt > $sampleName-kraken_report.txt
#single
krakenDatabase="/home/shared/databases/kraken/std/"; sampleName=`ls *fastq | head -1 | sed 's/_.*//' | sed 's/\..*//'`; kraken --db ${krakenDatabase} --threads 20  *fastq* > $sampleName-output.txt && kraken-report --db ${krakenDatabase} $sampleName-output.txt > $sampleName-kraken_report.txt

Ray -o assembly-ray -p ${sampleName}-${searcharg}Reads_R1.fastq ${sampleName}-${searcharg}Reads_R2.fastq &> raylog
Ray -o assembly-ray -s *kraken-Reads.fastq &> raylog

mkdir kraken script; mv *report.txt *output.txt kraken/; cp *fastq* script/; lh

find . -name "*gz" -type f -print0 | xargs -0 -n 1 -P 20 gunzip

sampleName=`ls *fastq* | head -1 | sed 's/_.*//' | sed 's/\..*//'`; cut -f2,3 $sampleName-output.txt > $sampleName-kronaInput.txt;  /usr/local/bin/ktImportTaxonomy $sampleName-kronaInput.txt; mv taxonomy.krona.html $sampleName-KronaGraphic.html; mv taxonomy.krona.html.files $sampleName-taxonomy.krona.html.files

